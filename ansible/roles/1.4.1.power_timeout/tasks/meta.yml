---

- name: 1.4.1_pcmk_monitor_retries_result
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/instance_attributes/nvpair[@name='pcmk_monitor_retries']" | grep -oP 'value="\K[^"]+'|| echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 4
    fi
  check_mode: no
  register: result_pcmk_monitor_retries
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following values for the fence-agent parameter: pcmk_monitor_retries=4"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_pcmk_monitor_retries.stdout != expected['1.4.1_pcmk_monitor_retries']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_monitor_retries.stdout != expected['1.4.1_pcmk_monitor_retries']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_monitor_retries.stdout == expected['1.4.1_pcmk_monitor_retries']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_pcmk_monitor_retries"	


- name: 1.4.1_pcmk_action_limit
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/instance_attributes/nvpair[@name='pcmk_action_limit']" | grep -oP 'value="\K[^"]+' || echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 3
    fi
  check_mode: no
  register: result_pcmk_action_limit
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following values for the fence-agent parameter: pcmk_action_limit=3"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_pcmk_action_limit.stdout != expected['1.4.1_pcmk_action_limit']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_action_limit.stdout != expected['1.4.1_pcmk_action_limit']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_action_limit.stdout == expected['1.4.1_pcmk_action_limit']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_pcmk_action_limit"	

- name: 1.4.1_power_timeout
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/instance_attributes/nvpair[@name='power_timeout']" | grep -oP 'value="\K[^"]+' || echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 240
    fi
  check_mode: no
  register: result_power_timeout
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following values for the fence-agent parameter: power_timeout=240"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_power_timeout.stdout != expected['1.4.1_power_timeout']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_power_timeout.stdout != expected['1.4.1_power_timeout']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_power_timeout.stdout == expected['1.4.1_power_timeout']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_power_timeout"	


- name: 1.4.1_pcmk_reboot_timeout
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/instance_attributes/nvpair[@name='pcmk_reboot_timeout']" | grep -oP 'value="\K[^"]+' || echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 900
    fi
  check_mode: no
  register: result_pcmk_reboot_timeout
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following values for the fence-agent parameter: pcmk_reboot_timeout=900"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_pcmk_reboot_timeout.stdout != expected['1.4.1_pcmk_reboot_timeout']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_reboot_timeout.stdout != expected['1.4.1_pcmk_reboot_timeout']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_pcmk_reboot_timeout.stdout == expected['1.4.1_pcmk_reboot_timeout']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_pcmk_reboot_timeout"	

- name: 1.4.1_monitor_interval
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/operations/op [@name='monitor']" | grep -oP 'interval="\K[^"]+' || echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 3600
    fi
  check_mode: no
  register: result_monitor_interval
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following monitor operation configuration: interval=3600"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_monitor_interval.stdout != expected['1.4.1_monitor_interval']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_monitor_interval.stdout != expected['1.4.1_monitor_interval']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_monitor_interval.stdout == expected['1.4.1_monitor_interval']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_monitor_interval"	

- name: 1.4.1_monitor_timeout
  shell: |
    if cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1; then
        cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/operations/op [@name='monitor']" | grep -oP 'timeout="\K[^"]+' || echo ""
    else
        # Azure Fence Agent is not configured. We echo expected values just to fulfill the check
        echo 120
    fi
  check_mode: no
  register: result_monitor_timeout
  changed_when: false
  when:
    - cloud_type == "azure"

- block:
    - import_role:
        name: manual-remediation
  vars:
    message: "1.4.1 The Azure SAP Clustering best practices determines specific timing and retries parameter values for proper functioning of the Azure Fence agent. Please, make sure to set the following monitor operation configuration: timeout=120"
  when:
    - cloud_type == "azure"
    - not ansible_check_mode
    - result_monitor_timeout.stdout != expected['1.4.1_monitor_timeout']

- block:
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_monitor_timeout.stdout != expected['1.4.1_monitor_timeout']
    - import_role:
        name: post-results
        tasks_from: meta
      when:
        - result_monitor_timeout.stdout == expected['1.4.1_monitor_timeout']
  when:
    - ansible_check_mode
    - cloud_type == "azure"
  vars:
    test: "1.4.1_monitor_timeout"	
